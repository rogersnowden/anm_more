o migrate your Node.js Express development environment from Windows 11 to Ubuntu, including MongoDB, here are the steps you need to follow:
1. Install Ubuntu

If you donâ€™t have Ubuntu installed, either set it up on a separate machine or use virtualization options like VirtualBox, VMware, or WSL (Windows Subsystem for Linux) if you're running it alongside Windows.
2. Prepare Ubuntu Environment

Once Ubuntu is installed, update and upgrade the system to ensure all the packages are up to date:

sudo apt update && sudo apt upgrade

3. Install Node.js and NPM

Install Node.js and npm using the following commands:

sudo apt install nodejs npm

Verify the installation:
node -v
npm -v

Alternatively, you can use nvm (Node Version Manager) to install Node.js:

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
source ~/.bashrc
nvm install node


4. Install MongoDB on Ubuntu

    Import the MongoDB public key:
	
curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo tee /etc/apt/trusted.gpg.d/mongodb-server-6.0.gpg > /dev/null


Add the MongoDB repository:
	
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list

Update the package list and install MongoDB:

sudo apt update
sudo apt install -y mongodb-org

Start and enable MongoDB:
sudo systemctl start mongod
sudo systemctl enable mongod

5. Transfer Your Node.js Express Code

    Compress your project folder on Windows using a tool like zip or tar.
    Transfer the code to Ubuntu using a tool like scp (if using SSH) or a USB drive.
	
For example, using scp:

scp -r /path/to/your/project username@ubuntu-ip:/path/to/destination

On Ubuntu, navigate to your project directory and install the project dependencies

cd /path/to/project
npm install

6. Update Database Configuration

Ensure your MongoDB URI points to the local instance of MongoDB in your .env or configuration file:

MONGODB_URI=mongodb://localhost:27017/your-database

7. Install Other Dependencies

Make sure you install any other dependencies your project needs (e.g., PM2 for running the server in the background):
sudo npm install pm2 -g


8. Test Your Application

Run your application:

If your app uses any ports, make sure to allow them through the firewall:

sudo ufw allow 3000/tcp  # Replace 3000 with your app port

9. Migrate Data from Windows MongoDB to Ubuntu

If you have data on your Windows MongoDB that you want to transfer:

    Export the database on Windows:

mongodump --uri="mongodb://localhost:27017/your-database" --out /path/to/backup

Transfer the dump files to your Ubuntu machine.
On Ubuntu, restore the data:

mongorestore --db your-database /path/to/backup

10. Configure Environment Variables

Ensure that any environment variables (e.g., API keys, database URIs) are properly set in Ubuntu. You can use .env files or set them manually:

export VARIABLE_NAME=value

By following these steps, you should have your Node.js and MongoDB environment set up and ready for testing on Ubuntu.
	



	

